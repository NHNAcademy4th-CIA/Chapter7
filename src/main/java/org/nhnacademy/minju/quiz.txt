Question 1:What is meant by the basetype of an array?
- array의 모든 원소는 같은 타입인데, 이를 basetype이라고 칭한다

Question 2:What is the purpose of the following variable-arity method? What are the values of same(1,2,3), same(17,17,17,17), and same(2)? Why?
static double same( int... value ) {
    for (int i = 1; i < value.length; i++) {
        if ( value[i-1] != value[i] )
            return false;
    }
    return true;
}
- 메서드 호출마다 매개 변수 개수를 다르게 사용할 수 있다
- false, true, true
- 모든 element가 같으면 true를 리턴하고 다르면 false를 리턴하는 서브루틴으로 same(2)에서는 loop를 거치지 않기 때문에 true를 리턴한다

Question 3:What does it mean to sort an array?
- 배열의 모든 항목을 증가 또는 감소 순서로 재정렬하는 것

Question 4:What is the main advantage of binary search over linear search? What is the main disadvantage?
- advantage : 시간이 linear search보다 적게 걸린다
- disadvantage : 배열의 정렬이 필요하다

Question 5:What is meant by a dynamic array? What is the advantage of a dynamic array over a regular array?
- 가질 수 있는 element가 제한되지 않은 배열
- 배열 생성 시 배열의 크기를 알 수 없을 때 유용하다

Question 6:What does it mean to say that ArrayList is a parameterized type?
- 만약 ArrayList<T>라고 할 때 ArrayList는 T 유형의 객체만 보유할 수 있다.

Question 7:Suppose that a variable strlst has been declared as
ArrayList<String> strlst = new ArrayList<String>();
Assume that the list is not empty and that all the items in the list are non-null. Write a code segment that will find and print the string in the list that comes first in lexicographic order.

private static void sortArray(ArrayList<String> arrayList) {
        for (int i = arrayList.size() - 1; i > 0; i--) {
            int maxLoc = 0;
            for (int j = 1; j <= i; j++) {
                if (arrayList.get(j).compareTo(arrayList.get(maxLoc)) >= 0) {
                    maxLoc = j;
                }
            }
            String temp = arrayList.get(maxLoc);
            arrayList.set(maxLoc, arrayList.get(i));
            arrayList.set(i, temp);
        }
}

Question 8:Show the exact output produced by the following code segment.

char[][] pic = new char[6][6];
for (int i = 0; i < 6; i++)
   for (int j = 0; j < 6; j++) {
      if ( i == j  ||  i == 0  ||  i == 5 )
         pic[i][j] = '*';
      else
         pic[i][j] = '.';
   }
for (int i = 0; i < 6; i++) {
   for (int j = 0; j < 6; j++)
      System.out.print(pic[i][j]);
   System.out.println();
}

* * * * * *
. * . . . .
. . * . . .
. . . * . .
. . . . . *
* * * * * *

Question 9:Write a complete static method that finds the largest value in an array of ints. The method should have one parameter, which is an array of type int[]. The largest number in the array should be returned as the value of the method.

private static int quiz9(int[] array) {
        int maxValue = Integer.MIN_VALUE;
        for (int i = 0; i < array.length; i++) {
            if (maxValue < array[i]) {
                maxValue = array[i];
            }
        }
        return maxValue;
}

Question 10:Suppose that temperature measurements were made on each day of 2021 in each of 100 cities. The measurements have been stored in an array

int[][]  temps  =  new  int[100][365];
where temps[c][d] holds the measurement for city number c on the dth day of the year. Write a code segment that will print out the average temperature, over the course of the whole year, for each city. The average temperature for a city can be obtained by adding up all 365 measurements for that city and dividing the answer by 365.0.

int[][] temps = new int[100][365];
        for (int i = 0; i < temps.length; i++) {
            int sumTemperature = 0;
            for (int j = 0; j < temps[0].length; j++) {
                sumTemperature += temps[i][j];
            }
            double avg = sumTemperature / 365f;
            System.out.println(sumTemperature);
}

Question 11:Suppose that a class, Employee, is defined as follows:

class Employee {
   String lastName;
   String firstName;
   double hourlyWage;
   int yearsWithCompany;
}
Suppose that data about 100 employees is already stored in an array:

Employee[] employeeData = new Employee[100];
Write a code segment that will output the first name, last name, and hourly wage of each employee who has been with the company for 20 years or more. Write two versions of the code segment, one that uses a regular for loop, and one that uses a for-each loop.

Employee[] employees = new Employee[100];

        for (int i = 0; i < employees.length; i++) {
            if (employees[i].yearsWithCompany >= 20) {
                System.out.println(employees[i].firstName + ", " +
                        employees[i].lastName + ", " +
                        employees[i].hourlyWage);
            }
}

Question 12:Convert the Employee class from the previous question into a record class. What changes would then need to be made to the previous question's solution?

record Employee(String lastName, String firstName, double hourlyWage, int yearsWithCompany) { }

Question 13:Write a record class to represent dates, where a Date object contains three integer fields giving the month, day, and year of the date. The canonical constructor should throw an exception if the values for the month and day are not legal. Also include a toString() method that prints a date in a form such as "5/27/2022".

record Date(int month, int day, int year) {
        public Date {
            if (month > 12 || month < 1 || day < 1 || day > 31) {
                throw new IllegalArgumentException("out of range");
            }
            int[] days = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
            days[1] = (year % 400 == 0 || (year % 100 != 0 && year % 4 != 0)) ? 29 : 28;
            month = days[month];
        }
        String toString() {
            return month + "/" + day + "/" + year;
        }
}

Question 14:What is the purpose of the following subroutine? What is the meaning of the value that it returns, in terms of the value of its parameter?

static double[] sums( double[][] data ) {
    double[] answers = new double[ data.length ];
    for (int i = 0; i < data.length; i++) {
        double sum = 0;
        for (int j = 0; j < data[i].length; i++)
            sum = sum + data[i][j];
        answers[i] = sum;
    }
    return answers;
}

- data 배열에서 각 행의 합을 구하는 것, answer 각 인덱스에 각 행의 합이 삽입된다